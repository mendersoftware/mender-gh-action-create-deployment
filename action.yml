name: 'Create Mender deployment'
description: 'Create a deployment on a Mender server'
branding:
  icon: "send"
  color: "white"
inputs:
  mender_pat:
    description: 'personal access token for the Mender server account to be used'
    required: true
  mender_deployment_name:
    description: 'deployment name to be created'
    required: true
  mender_release_name:
    description: 'Mender Artifacts release name'
    required: true
  mender_devices_group:
    description: 'the name of the devices group to which the release will be deployed'
    required: false
  mender_devices_list:
    description: 'the list of device IDs to which the release will be deployed'
    required: false
  mender_uri:
    description: 'URI for the Mender server to be used'
    required: false
    default: 'https://hosted.mender.io'
runs:
  using: "composite"
  steps:
    - id: input_validation
      shell: bash
      run: |
        if [[ -z "${{ inputs.mender_devices_group }}" && -z "${{ inputs.mender_devices_list }}" ]]; then
          echo "ERROR: both mender_devices_group and mender_devices_list are empty, at least one is expected to be set"
          exit 1
        fi
        if [ ! -f $(which curl) ]; then
          echo "ERROR: 'curl' is missing"
          exit 1
        fi
    - id: create_deployment
      shell: bash
      run: |
        if [ ! -z ${{ inputs.mender_devices_group }} ]; then
          # Makes management 'create deployment for group' API call to Mender server, using curl
          # https://docs.mender.io/api/#management-api-deployments-create-deployment-for-a-group-of-devices
          RESPONSE=$(curl -s -X POST https://hosted.mender.io/api/management/v1/deployments/deployments/group/${{ inputs.mender_devices_group }} \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ inputs.mender_pat }}" \
            --data-raw "{\"name\": \"${{ inputs.mender_deployment_name }}\", \"artifact_name\": \"${{ inputs.mender_release_name }}\"}")
        else
          # Makes management 'create deployment' API call to Mender server, using curl
          # https://docs.mender.io/api/#management-api-deployments-create-deployment
          MENDER_DEVICES_LIST=${{ inputs.mender_devices_list }}
          RESPONSE=$(curl -s -X POST ${{ inputs.mender_uri }}/api/management/v1/deployments/deployments \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ inputs.mender_pat }}" \
            --data-raw "{\"name\": \"${{ inputs.mender_deployment_name }}\", \"artifact_name\": \"${{ inputs.mender_release_name }}\", \"devices\": ${MENDER_DEVICES_LIST}}")
        fi
        if [[ ! -z "${RESPONSE}" || "${RESPONSE}" != "" ]]; then
          echo "ERROR: failed to create deployment '${{ inputs.mender_deployment_name }}', devices: ${MENDER_DEVICES_LIST}, server: ${{ inputs.mender_uri }}"
          echo "Server's response: ${RESPONSE}"
          exit 1
        fi
        echo "INFO: deployment '${{ inputs.mender_deployment_name }}' with release '${{ inputs.mender_release_name }}' for device group '${{ inputs.mender_devices_group }}${{ inputs.mender_devices_list }}' successfully created"
